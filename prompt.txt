now i freezed the current state of the Stern-I project as TAG STERN-Iv1, i wanne build the next generation with proces management support.

first i did to free-up memory space by disgarding the fonts and i change stern_computer.py for it. 


now i need to change STERN2.py and stern_computer.py, to ajust an new memory map in the lower region

4096 - Device IO region (this is where the processes lives)
3072 - 4096 Interrupt vectors (and others)
1024 - 3072 kernel space
0000 - 1024 loader space (now 512)

for development reasons the STERN2.py should be start just on instance, configurable, so later a can start 2 istances when needed

the new loader file is called loaderV3.py, and is adaptioned to the new situation

all first steps are done
in the second step, make the CPU context aware. 
A new instruction (eg ctxswith) saves the current context (Registers, program counter, stack pointer and the statusbit). and loads the new context. 

by default the CPU start running in context 0
when ctxswitch is called, all information is save by context number
and load the information from the next context, if
that context is new it saves the general registers, and for PC = program start + (context number * 1024), and for SP =  (program start + (context number * 1024)) + 1024

please check my idea on the second step